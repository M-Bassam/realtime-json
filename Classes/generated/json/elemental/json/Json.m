//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//
//  Created by Larry Tin <dev@goodow.com>
//

#include "elemental/json/Json.h"
#include "elemental/json/JsonArray.h"
#include "elemental/json/JsonBoolean.h"
#include "elemental/json/JsonFactory.h"
#include "elemental/json/JsonNull.h"
#include "elemental/json/JsonNumber.h"
#include "elemental/json/JsonObject.h"
#include "elemental/json/JsonString.h"
#include "elemental/json/impl/JreJsonFactory.h"

@implementation GDJson

+ (id<GDJsonString>)createString:(NSString *)string {
  return [((id<GDJsonFactory>) nil_chk([GDJson instance])) createWithNSString:string];
}

+ (id<GDJsonBoolean>)createBoolean:(BOOL)bool_ {
  return [((id<GDJsonFactory>) nil_chk([GDJson instance])) createWithBoolean:bool_];
}

+ (id<GDJsonArray>)createArray {
  return [((id<GDJsonFactory>) nil_chk([GDJson instance])) createArray];
}

+ (id<GDJsonNull>)createNull {
  return [((id<GDJsonFactory>) nil_chk([GDJson instance])) createNull];
}

+ (id<GDJsonNumber>)createNumber:(double)number {
  return [((id<GDJsonFactory>) nil_chk([GDJson instance])) createWithDouble:number];
}

+ (id<GDJsonObject>)createObject {
  return [((id<GDJsonFactory>) nil_chk([GDJson instance])) createObject];
}

+ (id<GDJsonFactory>)instance {
  return [[ElementalJsonImplJreJsonFactory alloc] init];
}

+ (id<GDJsonObject>)parse:(NSString *)jsonString {
  return [((id<GDJsonFactory>) nil_chk([GDJson instance])) parseWithNSString:jsonString];
}

- (id)init {
  return [super init];
}

@end
